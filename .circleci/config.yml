version: 2.1
orbs:
  node: circleci/node@6.1.0
  browser-tools: circleci/browser-tools@1.4.8
  gcp-cli: circleci/gcp-cli@3.2.2

commands:
  sonarcloud-scan:
    description: Detect bugs and vulnerabilities
    parameters:
      cache_version:
        default: 1
        description: increment this value if the cache is corrupted and you want to start with a clean cache
        type: integer
      project_root:
        default: .
        description: the root of the project that should be analyzed (relative to the root directory of the repository)
        type: string
      sonar_token_variable_name:
        default: SONAR_TOKEN
        description: the name of the environment variable where the SonarCloud API token is stored
        type: env_var_name
    steps:
      - run:
          name: Create cache directory if it doesn't exist
          command: mkdir -p /tmp/cache/scanner
      - run:
          name: SonarCloud Scan
          environment:
            SONARQUBE_SCANNER_PARAMS: '{"sonar.nodejs.executable":"/usr/local/bin/node"}'
          command: |
            set -e
            VERSION=6.2.0.4584
            SONAR_TOKEN=$<<parameters.sonar_token_variable_name>>
            SCANNER_DIRECTORY=/tmp/cache/scanner
            export SONAR_USER_HOME=$SCANNER_DIRECTORY/.sonar
            OS="linux"
            ARCH="x64"
            echo $SONAR_USER_HOME

            if [[ ! -x "$SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS-$ARCH/bin/sonar-scanner" ]]; then
              curl -Ol https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$VERSION-$OS-$ARCH.zip
              unzip -qq -o sonar-scanner-cli-$VERSION-$OS-$ARCH.zip -d $SCANNER_DIRECTORY

              chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS-$ARCH/bin/sonar-scanner
              chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS-$ARCH/jre/bin/java
            fi

            cd <<parameters.project_root>>
            $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS-$ARCH/bin/sonar-scanner

jobs:
  build-test:
    executor:
      name: node/default
      tag: lts-browsers
      resource_class: medium
    steps:
      - run:
          name: Test
          command: echo $CIRCLE_PULL_REQUEST
      - browser-tools/install-chrome
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Setup Environment Variables
          command: echo 'export PATH="$PWD/node_modules/.bin":"$PATH"' >> "$BASH_ENV"
      - run:
          name: Lint
          command: ng lint
      - run:
          name: Test
          command: ng test --code-coverage
          when: always
      - store_test_results:
          path: ./junit
          when: always
      - sonarcloud-scan
      - run:
          name: Build
          command: ng build --deploy-url "static/"
      - run:
          name: Organize outputs for GCP
          command: |
            mkdir dist/abcall/browser/static
            mv dist/abcall/browser/*.css dist/abcall/browser/static
            mv dist/abcall/browser/*.js dist/abcall/browser/static
      - persist_to_workspace:
          root: dist/abcall
          paths:
            - browser

  deploy-dev:
    executor: gcp-cli/google
    resource_class: small
    steps:
      - gcp-cli/setup:
          use_oidc: true
          google_project_id: DEV_GCP_PROJECT_ID
          google_project_number: DEV_GCP_PROJECT_NUMBER
          workload_identity_pool_id: DEV_GCP_WIP_ID
          workload_identity_pool_provider_id: DEV_GCP_WIP_PROVIDER_ID
          service_account_email: DEV_GCP_SERVICE_ACCOUNT_EMAIL
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy
          command: gcloud storage rsync workspace/browser gs://$DEV_BUCKET_FRONT --recursive --delete-unmatched-destination-objects
      - run:
          name: Invalidate cache
          command: gcloud compute url-maps invalidate-cdn-cache lb-url-map --path='/*' --global --async

  deploy-prod:
    executor: gcp-cli/google
    resource_class: small
    steps:
      - gcp-cli/setup:
          use_oidc: true
          google_project_id: PROD_GCP_PROJECT_ID
          google_project_number: PROD_GCP_PROJECT_NUMBER
          workload_identity_pool_id: PROD_GCP_WIP_ID
          workload_identity_pool_provider_id: PROD_GCP_WIP_PROVIDER_ID
          service_account_email: PROD_GCP_SERVICE_ACCOUNT_EMAIL
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy
          command: gcloud storage rsync workspace/browser gs://$PROD_BUCKET_FRONT --recursive --delete-unmatched-destination-objects
      - run:
          name: Invalidate cache
          command: gcloud compute url-maps invalidate-cdn-cache lb-url-map --path='/*' --global --async

workflows:
  cicd:
    jobs:
      - build-test
      - deploy-dev:
          requires:
            - build-test
          filters:
            branches:
              only:
                - develop
      - deploy-prod:
          requires:
            - build-test
          filters:
            branches:
              only:
                - main
